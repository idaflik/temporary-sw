vjust = 0.5,
min.segment.length = 0.25,
size = 2)+
theme_void()+
theme(legend.position = "none")
for (cur_year in unique(geo_grants_years$year)){
ggplot()+
geom_sf(geo_grants %>%
select(geometry)%>%
unique(),
mapping = aes(),
fill = NA,
color = "grey70")+
geom_sf(geo_grants_years %>%
filter(cur_year == year) %>%
mutate(geometry = st_centroid(geometry)),
mapping = aes(
size = eur,
color = name
),
alpha = 0.5,
)+
scale_size(limits = c(0, max(geo_grants_years$eur)))+
geom_text_repel(geo_grants_years %>%
st_centroid()%>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = geo_grants_years$name)%>%
select(name, X, Y)%>%
unique(),
mapping = aes(
label = name,
x = X,
y = Y
),
lwd = 0.1,
family = "mono",
force_pull = 3,
seed = 1,
hjust = 0.5,
vjust = 0.5,
min.segment.length = 0.25,
size = 2)+
theme_void()+
theme(legend.position = "none")
ggsave(glue("gif2/{cur_year}.png"))
}
ggplot()+
geom_sf(geo_grants %>%
select(geometry)%>%
unique(),
mapping = aes(),
fill = NA,
color = "grey70")+
geom_sf(geo_grants_years %>%
filter(cur_year == year) %>%
mutate(geometry = st_centroid(geometry)),
mapping = aes(
size = eur,
color = name
),
alpha = 0.5,
)+
scale_size(limits = c(0, max(geo_grants_years$eur)),
range = c(0,5))+
geom_text_repel(geo_grants_years %>%
st_centroid()%>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = geo_grants_years$name)%>%
select(name, X, Y)%>%
unique(),
mapping = aes(
label = name,
x = X,
y = Y
),
lwd = 0.1,
family = "mono",
force_pull = 3,
seed = 1,
hjust = 0.5,
vjust = 0.5,
min.segment.length = 0.25,
size = 2)+
theme_void()+
theme(legend.position = "none")
ggplot()+
geom_sf(geo_grants %>%
select(geometry)%>%
unique(),
mapping = aes(),
fill = NA,
color = "grey70")+
geom_sf(geo_grants_years %>%
filter(cur_year == year) %>%
mutate(geometry = st_centroid(geometry)),
mapping = aes(
size = eur,
color = name
),
alpha = 0.5,
)+
scale_size(limits = c(0, max(geo_grants_years$eur)),
range = c(0,10))+
geom_text_repel(geo_grants_years %>%
st_centroid()%>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = geo_grants_years$name)%>%
select(name, X, Y)%>%
unique(),
mapping = aes(
label = name,
x = X,
y = Y
),
lwd = 0.1,
family = "mono",
force_pull = 3,
seed = 1,
hjust = 0.5,
vjust = 0.5,
min.segment.length = 0.25,
size = 2)+
theme_void()+
theme(legend.position = "none")
for (cur_year in unique(geo_grants_years$year)){
ggplot()+
geom_sf(geo_grants %>%
select(geometry)%>%
unique(),
mapping = aes(),
fill = NA,
color = "grey70")+
geom_sf(geo_grants_years %>%
filter(cur_year == year) %>%
mutate(geometry = st_centroid(geometry)),
mapping = aes(
size = eur,
color = name
),
alpha = 0.5,
)+
scale_size(limits = c(0, max(geo_grants_years$eur)),
range = c(0,10))+
geom_text_repel(geo_grants_years %>%
st_centroid()%>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = geo_grants_years$name)%>%
select(name, X, Y)%>%
unique(),
mapping = aes(
label = name,
x = X,
y = Y
),
lwd = 0.1,
family = "mono",
force_pull = 3,
seed = 1,
hjust = 0.5,
vjust = 0.5,
min.segment.length = 0.25,
size = 2)+
theme_void()+
theme(legend.position = "none")
ggsave(glue("gif2/{cur_year}.png"))
}
plotdata <- data_allyears %>%
group_by(country, year)%>%
summarize(grants = sum(`eur`))
test <- plotdata %>%
group_by(country)%>%
summarize(grants = sum(grants))%>%
arrange(desc(grants))%>%
head(15)
ggplot(plotdata %>%
mutate(country = if_else(
country %in% test$country,
country,
"_rest"
))%>%
group_by(country, year)%>%
summarize(grants = sum(grants)))+
geom_area(
mapping = aes(
x = year,
y = grants,
fill = country,
group = country
),
color = "white"
)+
theme_minimal()
background_countries <- geo_grants_years %>%
select(geometry)%>%
unique()
st_write(background_countries, "output/countries.geojson")
total_countries <- data_allyears %>%
group_by(country)%>%
summarize(eur = sum(eur))
geo_grants <- countries %>%
select(name)%>%
inner_join(total_countries, by = c("name" = "country"))%>%
st_transform("+proj=robin")
View(geo_grants)
View(geo_grants)
st_write(geo_grants %>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = geo_grants$name,
eur = geo_grants$eur),
"output/countries.geojson")
geo_grants <- countries %>%
select(name)%>%
inner_join(total_countries, by = c("name" = "country"))%>%
st_transform("+proj=robin")
geo_grants %>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = geo_grants$name,
eur = geo_grants$eur)
geo_grants %>%
st_coordinates()%>%
as.data.frame()
geo_grants$name
geo_grants %>%
st_centroid()%>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = geo_grants$name,
eur = geo_grants$eur)
st_write(geo_grants %>%
st_centroid()%>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = geo_grants$name,
eur = geo_grants$eur),
"output/country_datapoints.geojson")
write_csv(geo_grants %>%
st_centroid()%>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = geo_grants$name,
eur = geo_grants$eur),
"output/country_datapoints.csv")
ggplot()+
geom_sf(background_countries, mapping = aes())
geo_grants_years <- countries %>%
select(name)%>%
inner_join(total_countries_years, by = c("name" = "country"))
background_countries <- geo_grants_years %>%
select(geometry)%>%
unique()
ggplot()+
geom_sf(background_countries, mapping = aes())
st_write(background_countries, "output/countries.geojson")
st_write(background_countries, "output/countries.geojson", append=FALSE)
?st_write
write_sf(background_countries, "output/countries.geojson", append=FALSE)
write_sf(background_countries, "output/countries.geojson", delete_layer = T)
## need to delete old file, otherwise only adds a layer and doesn'r replace
write_sf(background_countries, "output/countries.geojson")
geo_grants <- countries %>%
select(name)%>%
inner_join(total_countries, by = c("name" = "country"))
write_csv(geo_grants %>%
st_centroid()%>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = geo_grants$name,
eur = geo_grants$eur),
"output/country_datapoints.csv")
geo_grants %>%
st_centroid()%>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = geo_grants$name,
eur = geo_grants$eur)
View(geo_grants_years)
View(geo_grants)
write_sf(geo_grants,
"output/frontex_grants_countries_total.geojson")
View(geo_grants)
View(geo_grants_years)
write_sf(geo_grants_years,
"output/frontex_grants_countries_years.geojson")
View(geo_grants_years)
View(carto)
geo_grants <- countries %>%
select(name)%>%
inner_join(total_countries, by = c("name" = "country"))%>%
st_transform("+proj=robin")
carto <-  cartogram_dorling(geo_grants, weight = "eur", k = 1)
View(carto)
write_sf(carto, "frontex_grants_total_country_cartogram.geojson")
carto <-  cartogram_dorling(geo_grants, weight = "eur", k = 1) %>%
st_transform(4326)
View(carto)
ggplot()+
geom_sf(carto,
mapping = aes(
fill = name
),
alpha = 0.7)+
geom_text_repel(carto %>%
st_centroid()%>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = carto$name),
mapping = aes(
label = name,
x = X,
y = Y
),
family = "mono",
force_pull = 3,
hjust = 0.5,
vjust = 0.5,
min.segment.length = 0.25,
size = 2)+
theme_void()+
theme(legend.position = "none")
geo_grants <- countries %>%
select(name)%>%
inner_join(total_countries, by = c("name" = "country"))%>%
st_transform(4326)
carto <-  cartogram_dorling(geo_grants, weight = "eur", k = 1)
geo_grants <- countries %>%
select(name)%>%
inner_join(total_countries, by = c("name" = "country"))%>%
st_transform(3857)
carto <-  cartogram_dorling(geo_grants, weight = "eur", k = 1)%>%
st_transform(4326)
ggplot()+
geom_sf(carto,
mapping = aes(
fill = name
),
alpha = 0.7)+
geom_text_repel(carto %>%
st_centroid()%>%
st_coordinates()%>%
as.data.frame()%>%
mutate(name = carto$name),
mapping = aes(
label = name,
x = X,
y = Y
),
family = "mono",
force_pull = 3,
hjust = 0.5,
vjust = 0.5,
min.segment.length = 0.25,
size = 2)+
theme_void()+
theme(legend.position = "none")
View(geo_grants)
geo_grants %>% mutate(geometry = st_centroid(geometry))
write_sf(geo_grants %>% mutate(geometry = st_centroid(geometry)),
"output/frontex_grants_countries_total_centroid.geojson")
library(needs)
needs(tidyverse,
ggbump,
sf,
ggridges,
wbstats,
scales,
# ggsankey,
networkD3,
readxl,
ggplot2)
sheetnames <- excel_sheets("Grants_2008_2022.xlsx")
data_allyears <- c(1:length(sheetnames))%>%
map_dfr(function(current_sheet_nr){# current_sheet_nr <- 15
test <- read_excel("Grants_2008_2022.xlsx", sheet = current_sheet_nr, col_types = "text")%>%
## fix the numbers later
mutate(
`Total awarded in EUR` = case_when(
sheetnames[current_sheet_nr] %in% c("y2009") ~ str_remove_all(`Total awarded in EUR`, " |,"),
sheetnames[current_sheet_nr] %in% c("y2015") ~ str_remove_all(`Total awarded in EUR`, "\\."),
sheetnames[current_sheet_nr] %in% c("y2021") ~ str_replace_all(str_remove_all(`Total awarded in EUR`, " |\\."), ",", "."),
sheetnames[current_sheet_nr] %in% c("y2014", "y2021") ~ str_replace_all(str_remove_all(`Total awarded in EUR`, "\\."), ",", "."),
TRUE ~ as.character(`Total awarded in EUR`)),
year = sheetnames[current_sheet_nr])
if(sheetnames[current_sheet_nr] %in% c("y2008")){
test <- test %>%
rename(`Unit/\nSector` = `Unit\nSector`)}else{
test <- test
}
})%>%
rename(grant_no = "Grant No",
unit_sector = "Unit/\nSector",
country = Country,
beneficiary = "Name of Beneficiary",
address = "Address of Beneficiary",
project = "Project No. and title",
eur = "Total awarded in EUR")%>%
mutate(`eur` = as.numeric(`eur`),
year = as.numeric(str_remove_all(year, "y")))%>%
filter(!is.na(`eur`))%>%
mutate(across(c(country, unit_sector, project), ~ str_replace_all(., "[\r\n]", " ")))
plotdata <- data_allyears %>%
group_by(country, year)%>%
summarize(grants = sum(`eur`))
write_csv(plotdata, "output/grants_years_states.csv")
plotdata_wide <- plotdata %>%
spread(key = country, value = grants)
write_csv(plotdata_wide, "output/grants_years_states_wide.csv")
plotdata <- data_allyears %>%
group_by(`unit_sector`, year)%>%
summarize(grants = sum(`eur`))%>%
ungroup()
ggplot()+
geom_line(
plotdata,
mapping = aes(
x = year,
y = grants,
color = unit_sector,
group = unit_sector
)
)+
theme_minimal()
write_csv(plotdata, "output/grants_years_sectors.csv")
plotdata_wide <- plotdata %>%
spread(key = unit_sector, value = grants)
write_csv(plotdata_wide, "output/grants_years_sectors_wide.csv")
plotdata <- data_allyears %>%
## remove year strings
mutate(project = str_remove_all(project, "^[:digit:]{4}\\/"))%>%
group_by(`project`, year)%>%
summarize(grants = sum(`eur`))%>%
ungroup()
write_csv(plotdata, "output/grants_years_projects.csv")
plotdata_wide <- plotdata %>%
spread(key = project, value = grants)
write_csv(plotdata_wide, "output/grants_years_projects_wide.csv")
all <- bind_rows(
read_csv("output/grants_years_states_wide.csv") %>%
mutate(key = "by country"),
read_csv("output/grants_years_sectors_wide.csv") %>%
mutate(key = "by sector")
)%>%
bind_rows(read_csv("output/grants_years_projects_wide.csv")%>%
mutate(key = "by project"))%>%
relocate(key, .after = "year")%>%
mutate_all(~replace_na(.,0))
View(all)
View(data_allyears)
countries_sectors <- data_allyears %>%
select(country, unit_sector, eur, year)%>%
spread(unit_sector)%>%
mutate_all(~replace_na(.,0))
countries_sectors <- data_allyears %>%
select(country, unit_sector, eur, year)%>%
spread(key = unit_sector, value = eur)%>%
mutate_all(~replace_na(.,0))
countries_sectors <- data_allyears %>%
select(country, unit_sector, eur, year)%>%
group_by(year, country, unit_sector)%>%
summarize(eur = sum(eur, na.rm=T))%>%
spread(key = unit_sector, value = eur)%>%
mutate_all(~replace_na(.,0))
View(countries_sectors)
write_csv(all, "countries_sectors/frontex_grants_countries_sectors.csv")
write_csv(countries_sectors, "output/frontex_grants_countries_sectors.csv")
View(data_allyears)
sankey <- data_allyears %>%
group_by(country, beneficiary)%>%
summarize(eur = sum(eur, na.rm = T))
View(sankey)
write_csv(sankey, "output/beneficiaries.csv")
data_allyears <- c(1:length(sheetnames))%>%
map_dfr(function(current_sheet_nr){# current_sheet_nr <- 15
test <- read_excel("Grants_2008_2022.xlsx", sheet = current_sheet_nr, col_types = "text")%>%
## fix the numbers later
mutate(
`Total awarded in EUR` = case_when(
sheetnames[current_sheet_nr] %in% c("y2009") ~ str_remove_all(`Total awarded in EUR`, " |,"),
sheetnames[current_sheet_nr] %in% c("y2015") ~ str_remove_all(`Total awarded in EUR`, "\\."),
sheetnames[current_sheet_nr] %in% c("y2021") ~ str_replace_all(str_remove_all(`Total awarded in EUR`, " |\\."), ",", "."),
sheetnames[current_sheet_nr] %in% c("y2014", "y2021") ~ str_replace_all(str_remove_all(`Total awarded in EUR`, "\\."), ",", "."),
TRUE ~ as.character(`Total awarded in EUR`)),
year = sheetnames[current_sheet_nr])
if(sheetnames[current_sheet_nr] %in% c("y2008")){
test <- test %>%
rename(`Unit/\nSector` = `Unit\nSector`)}else{
test <- test
}
})%>%
rename(grant_no = "Grant No",
unit_sector = "Unit/\nSector",
country = Country,
beneficiary = "Name of Beneficiary",
address = "Address of Beneficiary",
project = "Project No. and title",
eur = "Total awarded in EUR")%>%
mutate(`eur` = as.numeric(`eur`),
year = as.numeric(str_remove_all(year, "y")))%>%
filter(!is.na(`eur`))%>%
mutate(across(c(country, unit_sector, project, beneficiary), ~ str_replace_all(., "[\r\n]", " ")))
sankey <- data_allyears %>%
mutate()
sankey <- data_allyears %>%
group_by(country, beneficiary)%>%
summarize(eur = sum(eur, na.rm = T))
write_csv(sankey, "output/frontex_grants_beneficiaries.csv")
write_csv2(sankey, "output/frontex_grants_beneficiaries_2.csv")
